/* Generated by Amaranth Yosys 0.40 (PyPI ver 0.40.0.0.post98, git sha1 a1bb0255d) */

(* top =  1  *)
(* generator = "Amaranth" *)
module passgatesCtrl(gno0, gpo0, gno1, gpo1, gno2, gpo2, gno3, gpo3, select);
  wire gn_0;
  wire gn_1;
  wire gn_2;
  wire gn_3;
  output gno0;
  wire gno0;
  output gno1;
  wire gno1;
  output gno2;
  wire gno2;
  output gno3;
  wire gno3;
  wire gp_0;
  wire gp_1;
  wire gp_2;
  wire gp_3;
  output gpo0;
  wire gpo0;
  output gpo1;
  wire gpo1;
  output gpo2;
  wire gpo2;
  output gpo3;
  wire gpo3;
  input [1:0] select;
  wire [1:0] select;
  wire [1:0] \select$9 ;
  \passgatesCtrl.passgates  passgates (
    .en_0(gno0),
    .en_1(gno1),
    .en_2(gno2),
    .en_3(gno3),
    .gp_0(gpo0),
    .gp_1(gpo1),
    .gp_2(gpo2),
    .gp_3(gpo3),
    .select(select)
  );
  assign \select$9  = select;
  assign gp_0 = gpo0;
  assign gn_0 = gno0;
  assign gp_1 = gpo1;
  assign gn_1 = gno1;
  assign gp_2 = gpo2;
  assign gn_2 = gno2;
  assign gp_3 = gpo3;
  assign gn_3 = gno3;
endmodule

(* generator = "Amaranth" *)
module \passgatesCtrl.passgates (en_0, en_1, en_2, en_3, gp_0, gp_1, gp_2, gp_3, select);
  output en_0;
  wire en_0;
  output en_1;
  wire en_1;
  output en_2;
  wire en_2;
  output en_3;
  wire en_3;
  wire gn_0;
  wire gn_1;
  wire gn_2;
  wire gn_3;
  output gp_0;
  wire gp_0;
  output gp_1;
  wire gp_1;
  output gp_2;
  wire gp_2;
  output gp_3;
  wire gp_3;
  input [1:0] select;
  wire [1:0] select;
  assign en_0 = ! select;
  assign en_1 = select == 1'h1;
  assign en_2 = select == 2'h2;
  assign en_3 = select == 2'h3;
  \passgatesCtrl.passgates.U$0  \U$0  (
    .en_0(en_0),
    .gp_0(gp_0)
  );
  \passgatesCtrl.passgates.U$1  \U$1  (
    .en_1(en_1),
    .gp_1(gp_1)
  );
  \passgatesCtrl.passgates.U$2  \U$2  (
    .en_2(en_2),
    .gp_2(gp_2)
  );
  \passgatesCtrl.passgates.U$3  \U$3  (
    .en_3(en_3),
    .gp_3(gp_3)
  );
  assign gn_0 = en_0;
  assign gn_1 = en_1;
  assign gn_2 = en_2;
  assign gn_3 = en_3;
endmodule

(* generator = "Amaranth" *)
module \passgatesCtrl.passgates.U$0 (gp_0, en_0);
  input en_0;
  wire en_0;
  wire gn_0;
  output gp_0;
  wire gp_0;
  assign gp_0 = ~ en_0;
  assign gn_0 = en_0;
endmodule

(* generator = "Amaranth" *)
module \passgatesCtrl.passgates.U$1 (gp_1, en_1);
  input en_1;
  wire en_1;
  wire gn_1;
  output gp_1;
  wire gp_1;
  assign gp_1 = ~ en_1;
  assign gn_1 = en_1;
endmodule

(* generator = "Amaranth" *)
module \passgatesCtrl.passgates.U$2 (gp_2, en_2);
  input en_2;
  wire en_2;
  wire gn_2;
  output gp_2;
  wire gp_2;
  assign gp_2 = ~ en_2;
  assign gn_2 = en_2;
endmodule

(* generator = "Amaranth" *)
module \passgatesCtrl.passgates.U$3 (gp_3, en_3);
  input en_3;
  wire en_3;
  wire gn_3;
  output gp_3;
  wire gp_3;
  assign gp_3 = ~ en_3;
  assign gn_3 = en_3;
endmodule

